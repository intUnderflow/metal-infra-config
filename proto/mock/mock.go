// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/intunderflow/metal-infra-config/proto (interfaces: InternalSyncClient,InternalSync_SyncClient)
//
// Generated by this command:
//
//	mockgen -destination proto/mock/mock.go github.com/intunderflow/metal-infra-config/proto InternalSyncClient,InternalSync_SyncClient
//

// Package mock_proto is a generated GoMock package.
package mock_proto

import (
	context "context"
	reflect "reflect"

	proto "github.com/intunderflow/metal-infra-config/proto"
	gomock "go.uber.org/mock/gomock"
	grpc "google.golang.org/grpc"
	metadata "google.golang.org/grpc/metadata"
)

// MockInternalSyncClient is a mock of InternalSyncClient interface.
type MockInternalSyncClient struct {
	ctrl     *gomock.Controller
	recorder *MockInternalSyncClientMockRecorder
}

// MockInternalSyncClientMockRecorder is the mock recorder for MockInternalSyncClient.
type MockInternalSyncClientMockRecorder struct {
	mock *MockInternalSyncClient
}

// NewMockInternalSyncClient creates a new mock instance.
func NewMockInternalSyncClient(ctrl *gomock.Controller) *MockInternalSyncClient {
	mock := &MockInternalSyncClient{ctrl: ctrl}
	mock.recorder = &MockInternalSyncClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInternalSyncClient) EXPECT() *MockInternalSyncClientMockRecorder {
	return m.recorder
}

// Sync mocks base method.
func (m *MockInternalSyncClient) Sync(arg0 context.Context, arg1 ...grpc.CallOption) (proto.InternalSync_SyncClient, error) {
	m.ctrl.T.Helper()
	varargs := []any{arg0}
	for _, a := range arg1 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Sync", varargs...)
	ret0, _ := ret[0].(proto.InternalSync_SyncClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Sync indicates an expected call of Sync.
func (mr *MockInternalSyncClientMockRecorder) Sync(arg0 any, arg1 ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{arg0}, arg1...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Sync", reflect.TypeOf((*MockInternalSyncClient)(nil).Sync), varargs...)
}

// MockInternalSync_SyncClient is a mock of InternalSync_SyncClient interface.
type MockInternalSync_SyncClient struct {
	ctrl     *gomock.Controller
	recorder *MockInternalSync_SyncClientMockRecorder
}

// MockInternalSync_SyncClientMockRecorder is the mock recorder for MockInternalSync_SyncClient.
type MockInternalSync_SyncClientMockRecorder struct {
	mock *MockInternalSync_SyncClient
}

// NewMockInternalSync_SyncClient creates a new mock instance.
func NewMockInternalSync_SyncClient(ctrl *gomock.Controller) *MockInternalSync_SyncClient {
	mock := &MockInternalSync_SyncClient{ctrl: ctrl}
	mock.recorder = &MockInternalSync_SyncClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInternalSync_SyncClient) EXPECT() *MockInternalSync_SyncClientMockRecorder {
	return m.recorder
}

// CloseSend mocks base method.
func (m *MockInternalSync_SyncClient) CloseSend() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseSend")
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseSend indicates an expected call of CloseSend.
func (mr *MockInternalSync_SyncClientMockRecorder) CloseSend() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseSend", reflect.TypeOf((*MockInternalSync_SyncClient)(nil).CloseSend))
}

// Context mocks base method.
func (m *MockInternalSync_SyncClient) Context() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Context indicates an expected call of Context.
func (mr *MockInternalSync_SyncClientMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockInternalSync_SyncClient)(nil).Context))
}

// Header mocks base method.
func (m *MockInternalSync_SyncClient) Header() (metadata.MD, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Header")
	ret0, _ := ret[0].(metadata.MD)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Header indicates an expected call of Header.
func (mr *MockInternalSync_SyncClientMockRecorder) Header() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Header", reflect.TypeOf((*MockInternalSync_SyncClient)(nil).Header))
}

// Recv mocks base method.
func (m *MockInternalSync_SyncClient) Recv() (*proto.SyncRecord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Recv")
	ret0, _ := ret[0].(*proto.SyncRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Recv indicates an expected call of Recv.
func (mr *MockInternalSync_SyncClientMockRecorder) Recv() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Recv", reflect.TypeOf((*MockInternalSync_SyncClient)(nil).Recv))
}

// RecvMsg mocks base method.
func (m *MockInternalSync_SyncClient) RecvMsg(arg0 any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RecvMsg", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecvMsg indicates an expected call of RecvMsg.
func (mr *MockInternalSync_SyncClientMockRecorder) RecvMsg(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecvMsg", reflect.TypeOf((*MockInternalSync_SyncClient)(nil).RecvMsg), arg0)
}

// Send mocks base method.
func (m *MockInternalSync_SyncClient) Send(arg0 *proto.SyncRecord) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockInternalSync_SyncClientMockRecorder) Send(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockInternalSync_SyncClient)(nil).Send), arg0)
}

// SendMsg mocks base method.
func (m *MockInternalSync_SyncClient) SendMsg(arg0 any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendMsg", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg.
func (mr *MockInternalSync_SyncClientMockRecorder) SendMsg(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockInternalSync_SyncClient)(nil).SendMsg), arg0)
}

// Trailer mocks base method.
func (m *MockInternalSync_SyncClient) Trailer() metadata.MD {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Trailer")
	ret0, _ := ret[0].(metadata.MD)
	return ret0
}

// Trailer indicates an expected call of Trailer.
func (mr *MockInternalSync_SyncClientMockRecorder) Trailer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Trailer", reflect.TypeOf((*MockInternalSync_SyncClient)(nil).Trailer))
}
