// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/intunderflow/metal-infra-config/proto (interfaces: MetalInfraConfigClient)
//
// Generated by this command:
//
//	mockgen -destination proto/mock/mock.go github.com/intunderflow/metal-infra-config/proto MetalInfraConfigClient
//

// Package mock_proto is a generated GoMock package.
package mock_proto

import (
	context "context"
	reflect "reflect"

	proto "github.com/intunderflow/metal-infra-config/proto"
	gomock "go.uber.org/mock/gomock"
	grpc "google.golang.org/grpc"
)

// MockMetalInfraConfigClient is a mock of MetalInfraConfigClient interface.
type MockMetalInfraConfigClient struct {
	ctrl     *gomock.Controller
	recorder *MockMetalInfraConfigClientMockRecorder
}

// MockMetalInfraConfigClientMockRecorder is the mock recorder for MockMetalInfraConfigClient.
type MockMetalInfraConfigClientMockRecorder struct {
	mock *MockMetalInfraConfigClient
}

// NewMockMetalInfraConfigClient creates a new mock instance.
func NewMockMetalInfraConfigClient(ctrl *gomock.Controller) *MockMetalInfraConfigClient {
	mock := &MockMetalInfraConfigClient{ctrl: ctrl}
	mock.recorder = &MockMetalInfraConfigClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetalInfraConfigClient) EXPECT() *MockMetalInfraConfigClientMockRecorder {
	return m.recorder
}

// Set mocks base method.
func (m *MockMetalInfraConfigClient) Set(arg0 context.Context, arg1 *proto.SetRequest, arg2 ...grpc.CallOption) (*proto.SetResponse, error) {
	m.ctrl.T.Helper()
	varargs := []any{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Set", varargs...)
	ret0, _ := ret[0].(*proto.SetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Set indicates an expected call of Set.
func (mr *MockMetalInfraConfigClientMockRecorder) Set(arg0, arg1 any, arg2 ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockMetalInfraConfigClient)(nil).Set), varargs...)
}

// Sync mocks base method.
func (m *MockMetalInfraConfigClient) Sync(arg0 context.Context, arg1 ...grpc.CallOption) (proto.MetalInfraConfig_SyncClient, error) {
	m.ctrl.T.Helper()
	varargs := []any{arg0}
	for _, a := range arg1 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Sync", varargs...)
	ret0, _ := ret[0].(proto.MetalInfraConfig_SyncClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Sync indicates an expected call of Sync.
func (mr *MockMetalInfraConfigClientMockRecorder) Sync(arg0 any, arg1 ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{arg0}, arg1...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Sync", reflect.TypeOf((*MockMetalInfraConfigClient)(nil).Sync), varargs...)
}
