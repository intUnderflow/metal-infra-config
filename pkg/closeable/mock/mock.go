// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/intunderflow/metal-infra-config/pkg/closeable (interfaces: Closeable)
//
// Generated by this command:
//
//	mockgen -destination pkg/closeable/mock/mock.go github.com/intunderflow/metal-infra-config/pkg/closeable Closeable
//

// Package mock_closeable is a generated GoMock package.
package mock_closeable

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockCloseable is a mock of Closeable interface.
type MockCloseable struct {
	ctrl     *gomock.Controller
	recorder *MockCloseableMockRecorder
}

// MockCloseableMockRecorder is the mock recorder for MockCloseable.
type MockCloseableMockRecorder struct {
	mock *MockCloseable
}

// NewMockCloseable creates a new mock instance.
func NewMockCloseable(ctrl *gomock.Controller) *MockCloseable {
	mock := &MockCloseable{ctrl: ctrl}
	mock.recorder = &MockCloseableMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCloseable) EXPECT() *MockCloseableMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockCloseable) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockCloseableMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockCloseable)(nil).Close))
}

// IsClosed mocks base method.
func (m *MockCloseable) IsClosed() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsClosed")
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsClosed indicates an expected call of IsClosed.
func (mr *MockCloseableMockRecorder) IsClosed() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsClosed", reflect.TypeOf((*MockCloseable)(nil).IsClosed))
}

// WaitForClosure mocks base method.
func (m *MockCloseable) WaitForClosure() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "WaitForClosure")
}

// WaitForClosure indicates an expected call of WaitForClosure.
func (mr *MockCloseableMockRecorder) WaitForClosure() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitForClosure", reflect.TypeOf((*MockCloseable)(nil).WaitForClosure))
}
